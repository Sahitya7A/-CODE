Program-1 

Ramu is given a number in string format. 
Now he turns his head by 180 and checks the given string. 
He saw the number that looks the same when rotated 180 defrees(looked at upside down). 

Help him to write the code and print the result as true or false. 

If same print true else print false 


Example 1:

Input: num = "69"
Output: true

Example 2:

Input: num = "88"
Output: true

Example 3:

Input: num = "962"
Output: false

Example 4:

Input: num = "1"
Output: true




import java.util.*;
class  TestStrobogrammatic
{ 
  public boolean isStrobogrammatic(String num) {
      Map<Character, Character> map = new HashMap<>();
      map.put('1','1');
      map.put('6','9');
      map.put('8','8');
      map.put('9','6');
      map.put('0','0');
      
      for(int i=0,j=num.length()-1; i<=num.length()/2; i++,j--) {
          if(!map.keySet().contains(num.charAt(i)) ||
             !map.keySet().contains(num.charAt(j)) ||
             map.get(num.charAt(i)) != num.charAt(j))
              return false;
      }

      return true;
  }

	public static void main(String[] args) 
	{
      Scanner sc = new Scanner(System.in);
	  String str = sc.next();
	  System.out.println(new TestStrobogrammatic().isStrobogrammatic(str));
	}
}


back end test cases
case = 1
input = 68
output = false

case = 2
input = 69
output = true

case = 3
input = 99
output = false

case = 4
input = 11
output = true



program-2
Given a string s, return the first non-repeating character in it and return its index. If it does not exist, return -1.

 
Example 1:

Input: s = "hello"
Output: 0

Example 2:

Input: s = "ississipi"
Output: 7

Example 3:

Input: s = "aabb"
Output: -1



import java.util.*;
class Test {
   	 public int firstUniqChar(String s) {
	        int out=-1;
	        HashMap<Character,Integer> map=new HashMap<>();
	        int a[]=new int[26];
	        for(char c: s.toCharArray()){
	            a[c-97]++;
	        }
	        for(int i=0;i<s.length();i++) {
	        	map.put(s.charAt(i), a[s.charAt(i)-97]);
	        }
	        for(int i=0;i<s.length();i++) {
	        	char c=s.charAt(i);
	        	if(map.get(c)==1) {
	        		out=i;
	        		break;
	        	}
	        }
	        return out;
	 }

	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		String str = sc.next();
		System.out.println(new Test().firstUniqChar(str));
	}
}


back end test cases
case = 1
input = misspissipim
output = -1

case = 2
input = aabbccddeefgghhiijjkkk
output = 10

case = 3
input = test
output = 1

case = 4
input = zyxwvutsrqponmnmpoqrstuvwxy
output = 0



Program-3

Write a program to print the following pattern 


input = 5
output = 
1 2 3 4 5
15 14 13 12
6 7 8
11 10
9


input = 6
output = 
21 20 19 18 17 16
1 2 3 4 5
15 14 13 12
6 7 8
11 10
9

input = 7
output = 
1 2 3 4 5 6 7
28 27 26 25 24 23
8 9 10 11 12
22 21 20 19
13 14 15
18 17
16



input = 8
output = 
36 35 34 33 32 31 30 29
1 2 3 4 5 6 7
28 27 26 25 24 23
8 9 10 11 12
22 21 20 19
13 14 15
18 17
16





import java.util.*;
class Test {
public static void main(String[] args) 
{
	Scanner sc = new Scanner(System.in);
	int n = sc.nextInt();
	int r,c,s1=1,s2=(n*(n+1))/2;

		for(r=n; r>=1; r--)
		{
		if(r%2==0)
		{
		for(c=1; c<=r; c++,s2--)
		   System.out.print(" "+s2);
		}
		else
		{
		for(c=1; c<=r; c++,s1++)
		   System.out.printf(" "+s1); 
		}
		System.out.println();
		}
}
}


back end test cases

case = 1
input = 5
output = 
1 2 3 4 5
15 14 13 12
6 7 8
11 10
9


case = 2
input = 6
output = 
21 20 19 18 17 16
1 2 3 4 5
15 14 13 12
6 7 8
11 10
9

case = 3
input = 7
output = 
1 2 3 4 5 6 7
28 27 26 25 24 23
8 9 10 11 12
22 21 20 19
13 14 15
18 17
16



case = 4
input = 8
output = 
36 35 34 33 32 31 30 29
1 2 3 4 5 6 7
28 27 26 25 24 23
8 9 10 11 12
22 21 20 19
13 14 15
18 17
16
