Program-1

Rishi is given a group of numbers(nums) which are >0 

He has to print the count of pairs(i,j) in the group which obeys the below rule 

0 <= i < j < nums.length
nums[i] + rev(nums[j]) == nums[j] + rev(nums[i])


Let us assume reverse(ele) as the reverse of the number 'ele' . 

For example, rev(123) = 321 , and rev(120) = 21 . 



Example 1:
Input = 4
42 11 1 97
Output = 2

Explanation: The two pairs are:
- (0,3) : 42 + rev(97) = 42 + 79 = 121, 97 + rev(42) = 97 + 24 = 121.
- (1,2) : 11 + rev(1) = 11 + 1 = 12, 1 + rev(11) = 1 + 11 = 12.



back end test cases
case = 1
input = 5
13 10 35 24 76
output = 4


case = 2
input = 4
42 11 1 97
output = 2


case = 3
input = 5
1 9 8 7 3
output = 10

case = 4
input = 8
17 87 65 34 23 98 12 98
output = 9


import java.util.*;

class NicePairs {
    public int countNicePairs(int[] A) {
        int res = 0;
        Map<Integer, Integer> count = new HashMap<>();
        for (int a : A) {
            int b = rev(a), v = count.getOrDefault(a - b, 0);
            count.put(a - b, v + 1);
            res = (res + v) ;
        }
        return res;
    }

    public int rev(int a) {
        int b = 0;
        while (a > 0) {
            b = b * 10 + (a % 10);
            a /= 10;
        }
        return b;
    }
	
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		int N=sc.nextInt();
		int mat[]=new int[N];
		for(int j=0;j<N;j++)
			mat[j]=sc.nextInt();
		System.out.println(new NicePairs().countNicePairs(mat));
	}
}




Program2

There is a large table, and a shooter kept N watermelons on it.
Each watermelon is kept one after the other in the given X-axis positions.
The length of the watermelons may vary.

The shooter has a raffle gun, and it can blast any number of watermelons 
into pieces with single shot in a straight line. After each gun shot, 
you can remove the blasted watermelons 

You will be given the positions of the watermelons on the large table melons[].
where melon[i] = [Xi, Xj], indicates the melon kept in the table between Xi and Xj 
and watermelon length is Xj-Xi, and Xi<Xj.

Your task is to find the minimum number of gun shots, 
required to blast all the watermelons into pieces.


Shooter stands opposite X axis lane and shoot the melons parallel to Y axis 




Input Format:
-------------
Line-1: An integer N, number of watermelons.
Next N lines: Two space separated integers, Xi and Xj.

Output Format:
--------------
Print an integer result, number of gunshots required.


Sample Input-1:
---------------
5
5 8
4 10
6 11
10 14
11 16

Sample Output-1:
----------------
2


Sample Input-2:
---------------
5
1 3
5 7
8 10
6 9
11 13

Sample Output-2:
----------------
4



