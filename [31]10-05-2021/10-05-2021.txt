Ramu is given some rows and columns of numbers which contain 
only '1' and '0'. Now his madam gave him a task to find the square 
in the given matrix which contains only's 1 and he has to return the area 


Input 
5 5
1 0 1 0 0
1 0 1 1 1
1 1 1 1 1
1 0 0 1 0
output = 4


Explanation 

The Second row third column froms the square matrix whose area is 4

Input 
3 4
1 1 1 0
1 1 1 0
1 1 1 0
output = 9 

Krishna is working on strings, He is trying to modify the string 
which has to be first in lexicographic order.
You can modify the string using following operations:
	- Interchnage the characters at the given pair of indices.
	- You can perform the interchange of the pair any number of times.
	- You will be given I number of pairs

Example: 
--------
If pair is ->[i,j], you can interchange the characters at i-th and j-th indices
with each other.

Krishna is given a String S, an integer I and I pairs of indices.
Can you help Krishna to find the string that can be formed 
after performing interchange operations, which has to be first in the
lexicographical order.

Note: String contains only lowercase letters.


Input Format:
-------------
Line-1: A string S
Line-2: An integer I, number of interchanges.
Next I lines: Two space separated integers, interchange pair.

Output Format:
--------------
A string, lexicographic smallest string after the interchanges


Sample Input-1:
---------------
cba
2
0 1
1 2

Sample Output-1:
----------------
abc

Explaination: 
-------------
Interchange s[0] and s[1], s = "bca"
Interchange s[1] and s[2], s = "bac"
Interchange s[0] and s[1], s = "abc"


Sample Input-2:
---------------
dcab
2
0 3
1 2

Sample Output-2:
----------------
bacd

Explaination: 
-------------
Interchange s[0] and s[3], s = "bcad"
Interchange s[1] and s[2], s = "bacd"


Sample Input-3:
---------------
dcab
3
0 3
1 2
0 2

Sample Output-3:
----------------
abcd

Explaination: 
-------------
Interchange s[0] and s[3], s = "bcad"
Interchange s[0] and s[2], s = "acbd"
Interchange s[1] and s[2], s = "abcd"



Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.

Example 1:

Input: n = 12
Output: 3 
Explanation: 12 = 4 + 4 + 4.

Example 2:

Input: n = 13
Output: 2
Explanation: 13 = 4 + 9.

public class Solution {
    //iterative solution
    public int numSquares(int n) {
        int [] cSquares = new int[n+1];
        for ( int m = 1; m <= n; ++m ){
            int sqc = Integer.MAX_VALUE;
            for ( int i=1; i*i <= m; ++i ){
                sqc = Math.min( sqc, cSquares[m - i*i] + 1 );
            }
            cSquares[m] = sqc;
        }
        return cSquares[n];
    }
    /**********************************************************/
    
    //recursive solution
    int[] memory;
    public int numSquares(int n) {
        memory = new int[n];
        return helper(n);
    }
    private int helper( int n ){
        if ( n == 0 ){
            return 0;
        }
        if ( memory[n-1] > 0){
            return memory[n-1];
        }
        int min = Integer.MAX_VALUE;
        for ( int i = 1; i*i <= n ; ++i ){
            min = Math.min( helper(n-i*i) + 1, min);
        }
        memory[n-1] = min;
        return min;
    }    
}https://www.programcreek.com/2014/05/leetcode-perfect-squares-java/
https://leetcode.com/problems/perfect-squares/discuss/1198036/Java-Understandable-DP-Solution
https://gist.github.com/shailrshah/4e3dba68176df36872e4af39033e9aa3
https://www.geeksforgeeks.org/minimum-number-of-squares-whose-sum-equals-to-given-number-n/
https://www.hackerrank.com/challenges/java-abstract-class/problem?utm_campaign=challenge-recommendation&utm_medium=email&utm_source=24-hour-campaign


program-1
 back end test cases
case = 1
input = 3 3
1 1 1
1 1 1
1 1 1
output = 9

case = 2
input = 3 3
1 1 1
0 0 0
1 1 1
output = 1

case = 3
input = 5 5
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
output = 25

case = 4
input = 4 4
1 1 1 1
1 1 1 1
1 1 1 1
1 1 1 0
output = 9



case =1
input =axbycz
5
0 3
3 2
1 4
5 0
3 1
output ='abcxyz'

case =2
input =fexdcbza
4
0 3
3 0
2 5
6 1
output ='debfcxza'

case =3
input =tkmi
2
1 3
0 2
output ='mitk'

case =4
input =keshav
3
4 0
5 3
2 3
output ='aehskv'


case = 1
input = 12
output = 3

case = 2
input = 1
output = 1

case = 3
input = 13
output = 2

case = 4
input = 16
output = 4