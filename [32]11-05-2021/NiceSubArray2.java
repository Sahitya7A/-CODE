/*2 2 2 1 2 2 1 2 2 2
0 1 2 3 4 5 6 7 8 9    
     
2 2 2 1 2 2 1 2 2 2     0-10
2 2 2 1 2 2 1 2 2        0-9
2 2 2 1 2 2 1 2           0-8 
2 2 2 1 2 2 1              0-7
   2 2 1 2 2 1 2 2 2     1-10
   2 2 1 2 2 1 2 2         1-9
   2 2 1 2 2 1 2             1-8
   2 2 1 2 2 1                1-7
      2 1 2 2 1 2 2 2       2-10
      2 1 2 2 1 2 2           2-9
      2 1 2 2 1 2               2-8
      2 1 2 2 1                  2-7
         1 2 2 1 2 2 2        3-10
         1 2 2 1 2 2          3-9
         1 2 2 1 2              3-8
         1 2 2 1                  3-7
*/
import java.util.*;
class NiceSubArray2
{
    public static ArrayList<Integer> a;
public static ArrayList<Integer> b=new ArrayList<>();
public static int k,count,tcount,l,j,m;
    public static int printNNiceArr()
    {
//X
    for(int i=0;i<a.size();i++){
for(int ii=0;ii<a.size();ii++){
j=10-ii;m=i;
     	if(m<j){
a.subList(m,j).forEach((e)->{if(e%2!=0){tcount++;}});
if(tcount==k){b.add(++count);}
System.out.println(count+"-"+i);
}}
   }  
System.out.println(b);
   return b.size();
    }
    public static void Count(int tcount,int l,int size)
{
if(tcount==k && l==size){count++;}
}
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        int n=sc.nextInt();
        a=new ArrayList<Integer>(n);
        for(int i=0;i<n;i++){a.add(sc.nextInt());}
         k=sc.nextInt();
        System.out.println(printNNiceArr());
    }
}

Given an array of integers nums and an integer k. A subarray is called nice if there are k odd numbers on it.
Return the number of nice sub-arrays.

input =
5
1 1 2 1 1
3
output =
2

Explanation: The only sub-arrays with 3 odd numbers are [1,1,2,1] and [1,2,1,1].

input =
3
2 4 6
1
output =
0
Explanation: There is no odd numbers in the array.

input =
10
2 2 2 1 2 2 1 2 2 2
2
output =16


v
case =1
input =8
2 3 5 12 2 4 5 7
output =3

case =2
input =6
9 7 5 4 2 1
output =5

case =3
input =7
1 2 3 4 5 6 7
output =0

case =4
input =20
8 11 12 17 21 25 27 32 22 18 24 15 23 35 39 41 45 47 48 49
output =5
case = 1
input = 1
output = 1



case = 2
input = 2
output = 
1
2 5



case = 3
input = 25
output =
1
2 5
6 9 14
15 18 23 30
31 34 39 46 55
56 59 64 71 80 91
92 95 100 107 116 127 140
141 144 149 156 165 176 189 204
205 208 213 220 229 240 253 268 285
286 289 294 301 310 321 334 349 366 385
386 389 394 401 410 421 434 449 466 485 506
507 510 515 522 531 542 555 570 587 606 627 650
651 654 659 666 675 686 699 714 731 750 771 794 819
820 823 828 835 844 855 868 883 900 919 940 963 988 1015
1016 1019 1024 1031 1040 1051 1064 1079 1096 1115 1136 1159 1184 1211 1240
1241 1244 1249 1256 1265 1276 1289 1304 1321 1340 1361 1384 1409 1436 1465 1496
1497 1500 1505 1512 1521 1532 1545 1560 1577 1596 1617 1640 1665 1692 1721 1752 1785
1786 1789 1794 1801 1810 1821 1834 1849 1866 1885 1906 1929 1954 1981 2010 2041 2074 2109
2110 2113 2118 2125 2134 2145 2158 2173 2190 2209 2230 2253 2278 2305 2334 2365 2398 2433 2470
2471 2474 2479 2486 2495 2506 2519 2534 2551 2570 2591 2614 2639 2666 2695 2726 2759 2794 2831 2870
2871 2874 2879 2886 2895 2906 2919 2934 2951 2970 2991 3014 3039 3066 3095 3126 3159 3194 3231 3270 3311
3312 3315 3320 3327 3336 3347 3360 3375 3392 3411 3432 3455 3480 3507 3536 3567 3600 3635 3672 3711 3752 3795
3796 3799 3804 3811 3820 3831 3844 3859 3876 3895 3916 3939 3964 3991 4020 4051 4084 4119 4156 4195 4236 4279 4324
4325 4328 4333 4340 4349 4360 4373 4388 4405 4424 4445 4468 4493 4520 4549 4580 4613 4648 4685 4724 4765 4808 4853 4900
4901 4904 4909 4916 4925 4936 4949 4964 4981 5000 5021 5044 5069 5096 5125 5156 5189 5224 5261 5300 5341 5384 5429 5476 5525



case = 4
input = 17
output = 
1
2 5
6 9 14
15 18 23 30
31 34 39 46 55
56 59 64 71 80 91
92 95 100 107 116 127 140
141 144 149 156 165 176 189 204
205 208 213 220 229 240 253 268 285
286 289 294 301 310 321 334 349 366 385
386 389 394 401 410 421 434 449 466 485 506
507 510 515 522 531 542 555 570 587 606 627 650
651 654 659 666 675 686 699 714 731 750 771 794 819
820 823 828 835 844 855 868 883 900 919 940 963 988 1015
1016 1019 1024 1031 1040 1051 1064 1079 1096 1115 1136 1159 1184 1211 1240
1241 1244 1249 1256 1265 1276 1289 1304 1321 1340 1361 1384 1409 1436 1465 1496
1497 1500 1505 1512 1521 1532 1545 1560 1577 1596 1617 1640 1665 1692 1721 1752 1785





case = 1
input =
10
2 2 2 1 2 2 1 2 2 2
2
output =16

case = 2
input =
3
2 4 6
1
output =
0

case = 3
input = 5
1 1 2 1 1
3
output =
2

case = 4
input = 5
1 2 3 4 5
5
output = 0