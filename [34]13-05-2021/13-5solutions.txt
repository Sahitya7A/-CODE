/*ONE*/
import java.util.*;

class ShortcutWords {
	public List<String> makeShortcutWords(String word) {
		List<String> res = new ArrayList<String>();
		DFS(res, new StringBuilder(), word.toCharArray(), 0, 0);
		return res;
	}

	public void DFS(List<String> res, StringBuilder sb, char[] c, int i, int num) {
		int len = sb.length();  
		if(i == c.length) {
			if(num != 0) sb.append(num);
			res.add(sb.toString());
		} else {
			DFS(res, sb, c, i + 1, num + 1);               // abbr c[i]

			if(num != 0) sb.append(num);                   // not abbr c[i]
			DFS(res, sb.append(c[i]), c, i + 1, 0);        
		}
		sb.setLength(len); 
	}
	
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		String s=sc.next();
		System.out.println(new ShortcutWords().makeShortcutWords(s));
	}
}



/*TWO*/
 import java.util.*;
 public class grid{
      static boolean visited[][];
     public static boolean ans(char[][] grid,String word){
         int row=grid.length;
         int col=grid[0].length;
         visited=new boolean[row][col];
         for(int i=0;i<row;i++){
             for(int j=0;j<col;j++){
                 if(word.charAt(0)==grid[i][j] && search(i,j,0,grid,word)){
                     return true;
                 }
             }
         }
         return false;
     }
     
     public static boolean search(int i,int j,int index,char[][] grid,String word){
         
         if(word.length()==index)
             return true;
         if(i<0 || i>=grid.length || j<0 || j>=grid[i].length || visited[i][j] || word.charAt(index)!=grid[i][j])
             return false;
             
         visited[i][j]=true;
          if(search(i+1,j,index+1,grid,word)||
             search(i-1,j,index+1,grid,word)||
             search(i,j+1,index+1,grid,word)||
             search(i,j-1,index+1,grid,word)){
                 return true;
             }
             visited[i][j]=false;
             
         return false;
     }
     
     
     
     
     public static void main(String[] args){
         Scanner sc = new Scanner(System.in);
         int r=sc.nextInt();
         int c=sc.nextInt();
         char[][] grid=new char[r][c];
         for(int i=0;i<r;i++){
             for(int j=0;j<c;j++){
                 grid[i][j]=sc.next().charAt(0);
             }
         }
         String word=sc.next();
         System.out.print(ans(grid,word));
         }
     }
