1) Given:

3. class A { }
4. class B extends A { }
5. public class ComingThru {
6. static String s = "-";
7. public static void main(String[] args) {
8. A[] aa = new A[2];
9. B[] ba = new B[2];
10. sifter(aa);
11. sifter(ba);
12. sifter(7);
13. System.out.println(s);
14. }
15. static void sifter(A[]... a2) { s += "1"; }
16. static void sifter(B[]... b1) { s += "2"; }
17. static void sifter(B[] b1) { s += "3"; }
18. static void sifter(Object o) { s += "4"; }
19. }

What is the result?
A. -124
B. -134
C. -424
D. -434
E. -444
F. Compilation fails









Answer:
D is correct. 
In general, overloaded var-args methods are chosen last. Remember that arrays are objects. 
Finally, an int can be boxed to an Integer and then "widened" to an Object.

2) class Mixer {
Mixer() { }
Mixer(Mixer m) { m1 = m; }
Mixer m1;
public static void main(String[] args) {
Mixer m2 = new Mixer();
Mixer m3 = new Mixer(m2); m3.go();
Mixer m4 = m3.m1; m4.go();
Mixer m5 = m2.m1; m5.go();
}
void go() { System.out.print("hi "); }
}

What is the result?
A. hi
B. hi hi
C. hi hi hi
D. Compilation fails
E. hi, followed by an exception
F. hi hi, followed by an exception











Answer:
F is correct. 
The m2 object’s m1 instance variable is never initialized, so when m5 tries to
use it a NullPointerException is thrown.

3)
Given:
class Fizz {
int x = 5;
public static void main(String[] args) {
final Fizz f1 = new Fizz();
Fizz f2 = new Fizz();
Fizz f3 = FizzSwitch(f1,f2);
System.out.println((f1 == f3) + " " + (f1.x == f3.x));
}

static Fizz FizzSwitch(Fizz x, Fizz y) {
final Fizz z = x;
z.x = 6;
return z;
} }

What is the result?
A. true true
B. false true
C. true false
D. false false
E. Compilation fails
F. An exception is thrown at runtime





Answer:
A is correct. 

The references f1, z, and f3 all refer to the same instance of Fizz. 
The final modifier assures that a reference variable cannot be referred to a different object, 
but final doesn’t keep the object’s state from changing.

4) Given:

class Bird {
{ System.out.print("b1 "); }
public Bird() { System.out.print("b2 "); }
}

class Raptor extends Bird {
static { System.out.print("r1 "); }
public Raptor() { System.out.print("r2 "); }
{ System.out.print("r3 "); }
static { System.out.print("r4 "); }
}

class Hawk extends Raptor {
public static void main(String[] args) {
System.out.print("pre ");
new Hawk();
System.out.println("hawk ");
}
}

What is the result?
A. pre b1 b2 r3 r2 hawk
B. pre b2 b1 r2 r3 hawk
C. pre b2 b1 r2 r3 hawk r1 r4
D. r1 r4 pre b1 b2 r3 r2 hawk
E. r1 r4 pre b2 b1 r2 r3 hawk
F. pre r1 r4 b1 b2 r3 r2 hawk
G. pre r1 r4 b2 b1 r2 r3 hawk
H. The order of output cannot be predicted
I. Compilation fails





Answer:
D is correct. Static init blocks are executed at class loading time, instance init blocks run
right after the call to super() in a constructor. When multiple init blocks of a single type
occur in a class, they run in order, from the top down.


5)
A process executes the code

fork();
fork();
fork(); 

The total number of child processes created is
A) 3
B) 4
C) 7
D) 8




Ans-C

Explanation:

  fork ();    // Line 1
  fork ();   // Line 2
  fork ();   // Line 3


       L1       // There will be 1 child process created by line 1
    /     \
  L2      L2    // There will be 2 child processes created by line 2
 /  \    /  \
L3  L3  L3  L3  // There will be 4 child processes created by line 3


6)The following numbers are inserted into an empty binary search tree in the given order: 10, 1, 3, 4, 15, 13, 17. 
What is the height of the binary search tree (the height is the maximum distance of a leaf node from the root)? 

(A) 2
(B) 3
(C) 4
(D) 6









Answer: (B)

Explanation: Constructed binary search tree will be..

                    10
                  /     \
                 1       15
                 \      /  \
                  3    13   17
                    \
                     4


7)

A binary search tree is generated by inserting in order the following integers:

50, 15, 62, 5, 20, 58, 91, 3, 8, 37, 60, 24

The number of the node in the left sub-tree and right sub-tree of the root, respectively, is

a) (4, 7)
b) (7, 4)
c) (8, 3)
d) (3, 8)
e) None of these











ANSWER: B

8)An IPv4 address consists of _______ bits.
		
A)	4
B)	8
C)	32
D)	64




Ans-C

9)What is the time complexity of fun()?

int fun(int n) 
{ 
  int count = 0; 
  for (int i = 0; i < n; i++) 
     for (int j = i; j > 0; j--) 
        count = count + 1; 
  return count; 
}  

(A) Theta (n)
(B) Theta (n^2)
(C) Theta (n*Logn)
(D) Theta (nLognLogn)





Answer: (B)

Explanation: 

The time complexity can be calculated by counting number of times the expression "count = count + 1;" is executed. 

The expression is executed 0 + 1 + 2 + 3 + 4 + …. + (n-1) times.

Time complexity = Theta(0 + 1 + 2 + 3 + .. + n-1) = Theta (n*(n-1)/2) = Theta(n^2)





10) Given (A + B) * (C + D)

Convert o Prefix and Postfix 

A) 
 +* +A B C D
A B  C D + *+ 

B)
+ A B * +C D
A B * C D + * 

C)
 *++ A B  C D
A B C D ++ * 

D)
* + A B + C D
A B + C D + * 





Ans-D